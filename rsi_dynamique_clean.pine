//@version=6
indicator("RSI Dynamique Clean", "RSI", overlay=false, format=format.price, precision=2)

// ═══════════════════════════════════════════════════════════════════════════
// PARAMÈTRES ESSENTIELS SEULEMENT / ESSENTIAL PARAMETERS ONLY
// ═══════════════════════════════════════════════════════════════════════════

rsi_period = input.int(14, "RSI Période", minval=2, maxval=100)
atr_period = input.int(20, "ATR Période", minval=1, maxval=50)
volatility = input.float(0.5, "Facteur Volatilité", minval=0.1, maxval=2.0, step=0.1)
base_upper = input.float(70.0, "Surachat Base", minval=60, maxval=85)
base_lower = input.float(30.0, "Survente Base", minval=15, maxval=40)
enable_signals = input.bool(true, "Activer Signaux")

// ═══════════════════════════════════════════════════════════════════════════
// CALCULS ESSENTIELS / ESSENTIAL CALCULATIONS  
// ═══════════════════════════════════════════════════════════════════════════

// RSI de base
rsi = ta.rsi(close, rsi_period)

// ATR normalisé pour zones dynamiques
atr = ta.atr(atr_period)
atr_percent = atr / close * 100
volatility_adjustment = atr_percent * volatility * 0.2

// Zones dynamiques avec limitations
upper_zone = math.min(base_upper + volatility_adjustment, 95)
lower_zone = math.max(base_lower - volatility_adjustment, 5)

// Signaux simples
long_signal = enable_signals and ta.crossover(rsi, lower_zone)
short_signal = enable_signals and ta.crossunder(rsi, upper_zone)

// ═══════════════════════════════════════════════════════════════════════════
// AFFICHAGE MINIMAL ET PROPRE / MINIMAL AND CLEAN DISPLAY
// ═══════════════════════════════════════════════════════════════════════════

// Lignes de référence discrètes
hline(0, "0", color=color.new(color.gray, 80))
hline(30, "30", color=color.new(color.gray, 60), linestyle=hline.style_dotted)
hline(50, "50", color=color.gray, linestyle=hline.style_dashed, linewidth=1)
hline(70, "70", color=color.new(color.gray, 60), linestyle=hline.style_dotted)
hline(100, "100", color=color.new(color.gray, 80))

// Zones dynamiques (lignes uniquement)
plot(upper_zone, "Surachat Dynamique", color=#FF3333, linewidth=2)
plot(lower_zone, "Survente Dynamique", color=#33FF33, linewidth=2)

// RSI principal (ligne épaisse bleue)
plot(rsi, "RSI", color=#0066FF, linewidth=4)

// ═══════════════════════════════════════════════════════════════════════════
// SIGNAUX AVEC BACKGROUND UNIQUEMENT / BACKGROUND SIGNALS ONLY
// ═══════════════════════════════════════════════════════════════════════════

bgcolor(long_signal ? color.new(#00FF00, 90) : na, title="Signal Long")
bgcolor(short_signal ? color.new(#FF0000, 90) : na, title="Signal Short")

// ═══════════════════════════════════════════════════════════════════════════
// DASHBOARD MINIMAL / MINIMAL DASHBOARD
// ═══════════════════════════════════════════════════════════════════════════

if barstate.islast
    var table info = table.new(position.top_right, columns=2, rows=4, 
                                bgcolor=color.new(color.black, 90), 
                                border_width=1, border_color=#0066FF)
    
    table.cell(info, 0, 0, "RSI", text_color=color.white, bgcolor=#0066FF, text_size=size.tiny)
    table.cell(info, 1, 0, str.tostring(math.round(rsi, 1)), text_color=#0066FF, text_size=size.tiny)
    
    table.cell(info, 0, 1, "Surachat", text_color=color.white, text_size=size.tiny)
    table.cell(info, 1, 1, str.tostring(math.round(upper_zone, 0)), text_color=#FF3333, text_size=size.tiny)
    
    table.cell(info, 0, 2, "Survente", text_color=color.white, text_size=size.tiny)
    table.cell(info, 1, 2, str.tostring(math.round(lower_zone, 0)), text_color=#33FF33, text_size=size.tiny)
    
    table.cell(info, 0, 3, "Volatilité", text_color=color.white, text_size=size.tiny)
    table.cell(info, 1, 3, str.tostring(math.round(atr_percent, 1)) + "%", text_color=color.yellow, text_size=size.tiny)

// ═══════════════════════════════════════════════════════════════════════════
// ALERTES SIMPLES / SIMPLE ALERTS
// ═══════════════════════════════════════════════════════════════════════════

alertcondition(long_signal, title="RSI Long", message="🟢 RSI Long - Survente franchie")
alertcondition(short_signal, title="RSI Short", message="🔴 RSI Short - Surachat franchi")

// ═══════════════════════════════════════════════════════════════════════════
// VALIDATION LOGS / VALIDATION LOGS
// ═══════════════════════════════════════════════════════════════════════════

if barstate.islast
    log.info("🔍 RSI DYNAMIQUE CLEAN - STATUS:")
    log.info("✅ Isolation fenêtre: " + str.tostring(not overlay))
    log.info("✅ Format prix: " + str.tostring(format == format.price))
    log.info("✅ Précision: 2")
    log.info("📊 RSI: " + str.tostring(math.round(rsi, 2)))
    log.info("📈 Zones: " + str.tostring(math.round(lower_zone, 0)) + " - " + str.tostring(math.round(upper_zone, 0)))
    log.info("🎯 Signaux actifs: " + str.tostring(enable_signals))